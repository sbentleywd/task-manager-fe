[{"/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/reportWebVitals.ts":"1","/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/NavBar/AuthenticatedNavBar.tsx":"2","/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/SignUp/SignUp.tsx":"3","/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/NavBar/UnauthenticatedNavBar.tsx":"4","/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/UserTaskControls/UserTaskControls.tsx":"5","/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/UserTasks/UserTasks.tsx":"6","/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/auth/utils.tsx":"7","/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/TaskForm/TaskForm.tsx":"8","/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/Landing/Landing.tsx":"9","/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/EditTask/EditTask.tsx":"10","/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/Login/Login.tsx":"11"},{"size":425,"mtime":1610729184545,"results":"12","hashOfConfig":"13"},{"size":2534,"mtime":1611606549576,"results":"14","hashOfConfig":"13"},{"size":2324,"mtime":1611231934203,"results":"15","hashOfConfig":"13"},{"size":923,"mtime":1611232119724,"results":"16","hashOfConfig":"13"},{"size":3198,"mtime":1621095199685,"results":"17","hashOfConfig":"13"},{"size":3498,"mtime":1621373161291,"results":"18","hashOfConfig":"13"},{"size":3586,"mtime":1621373287274,"results":"19","hashOfConfig":"13"},{"size":2609,"mtime":1621173831773,"results":"20","hashOfConfig":"13"},{"size":124,"mtime":1611164197608,"results":"21","hashOfConfig":"13"},{"size":864,"mtime":1611782568989,"results":"22","hashOfConfig":"13"},{"size":1931,"mtime":1617212026654,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"13cx3zq",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/reportWebVitals.ts",[],["48","49"],"/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/NavBar/AuthenticatedNavBar.tsx",[],"/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/SignUp/SignUp.tsx",[],"/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/NavBar/UnauthenticatedNavBar.tsx",[],"/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/UserTaskControls/UserTaskControls.tsx",[],"/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/UserTasks/UserTasks.tsx",["50","51"],"/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/auth/utils.tsx",[],"/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/TaskForm/TaskForm.tsx",["52","53"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n\tMuiPickersUtilsProvider,\n\tKeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport useUser from \"../auth/useUser\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\tformContainer: {\n\t\t\tdisplay: \"flex\",\n\t\t\tflexWrap: \"wrap\",\n\t\t\talignItems: \"center\",\n\t\t\tflexDirection: \"column\",\n\t\t\tmarginTop: \"3rem\",\n\t\t},\n\t\ttextField: {\n\t\t\tmargin: theme.spacing(1),\n\t\t\twidth: \"30ch\",\n\t\t},\n\t\tsubmit: {\n\t\t\tmargin: theme.spacing(1),\n\t\t},\n\t})\n);\n\nconst TaskForm = (props: {\n\ttask: { description: string; completed: boolean; dueDate?: string };\n\thandleSave: (\n\t\tdescription: string,\n\t\tcompleted: boolean,\n\t\tdueDate: Date | null\n\t) => void;\n}) => {\n\tconst classes = useStyles();\n\tconst [description, setDescription] = useState<string>(\n\t\tprops.task.description\n\t);\n\tconst [completed, setCompleted] = useState<boolean>(props.task.completed);\n\tconst [selectedDate, setSelectedDate] = React.useState<Date | null>(\n\t\tprops.task.dueDate ? new Date(props.task.dueDate!) : new Date()\n\t);\n\n\tconst handleDateChange = (date: Date | null) => {\n\t\tsetSelectedDate(date);\n\t};\n\n\tuseEffect(() => {\n\t\tconst defaultCategories = [\"General\", \"Work\", \"Exercise\"];\n\t});\n\n\treturn (\n\t\t<div className={classes.formContainer}>\n\t\t\t<TextField\n\t\t\t\tclassName={classes.textField}\n\t\t\t\tid=\"outlined\"\n\t\t\t\tlabel=\"Description\"\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tonChange={(e) => setDescription(e.target.value)}\n\t\t\t\tvalue={description}\n\t\t\t/>\n\n\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tid=\"date-picker-dialog\"\n\t\t\t\t\tlabel=\"Due date\"\n\t\t\t\t\tformat=\"dd/MM/yyyy\"\n\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\tonChange={handleDateChange}\n\t\t\t\t\tKeyboardButtonProps={{\n\t\t\t\t\t\t\"aria-label\": \"change date\",\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</MuiPickersUtilsProvider>\n\t\t\t<InputLabel id=\"task-form-completed\">Completed?</InputLabel>\n\t\t\t<Switch\n\t\t\t\tchecked={completed}\n\t\t\t\tonChange={(e) => setCompleted(e.target.checked)}\n\t\t\t\tname=\"completed\"\n\t\t\t\tinputProps={{ \"aria-label\": \"completed checkbox\" }}\n\t\t\t/>\n\n\t\t\t<Button\n\t\t\t\tonClick={() =>\n\t\t\t\t\tprops.handleSave(description, completed, selectedDate)\n\t\t\t\t}\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tclassName={classes.submit}\n\t\t\t>\n\t\t\t\tSave\n\t\t\t</Button>\n\t\t</div>\n\t);\n};\n\nexport default TaskForm;\n","/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/Landing/Landing.tsx",[],"/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/EditTask/EditTask.tsx",[],"/Users/simonbentley/Documents/Coding/site/Task Manager/task-manager-fe/task-manager/src/components/Login/Login.tsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":83,"column":5,"nodeType":"60","endLine":83,"endColumn":51,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"62","line":88,"column":5,"nodeType":"60","endLine":88,"endColumn":22,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":13,"column":8,"nodeType":"66","messageId":"67","endLine":13,"endColumn":15},{"ruleId":"64","severity":1,"message":"68","line":56,"column":9,"nodeType":"66","messageId":"67","endLine":56,"endColumn":26},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTasks'. Either include it or remove the dependency array.","ArrayExpression",["71"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["72"],"@typescript-eslint/no-unused-vars","'useUser' is defined but never used.","Identifier","unusedVar","'defaultCategories' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [filterCompleted, sortBy, sortOrder, category, getTasks]",{"range":"77","text":"78"},"Update the dependencies array to be: [filterCompleted, getCategories]",{"range":"79","text":"80"},[2180,2226],"[filterCompleted, sortBy, sortOrder, category, getTasks]",[2322,2339],"[filterCompleted, getCategories]"]